---
# tasks file for k8s_apply_deployment
- name: Ensure namespace exists
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}"
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ namespace }}"

- name: Create secret Docker regestry
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}"
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "{{secret_name}}"
        namespace: "{{ namespace }}"
      type: kubernetes.io/dockerconfigjson
      data:
        .dockerconfigjson: "{{ docker_config_json | to_json | b64encode }}"


- name: Apply k8s pod
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}"
    state: present
    definition: "{{ lookup('template', 'pod.yml.j2') }}"


- name: Get Pod details
  kubernetes.core.k8s_info:
    kubeconfig: "{{ kubeconfig_path }}"
    kind: Pod
    namespace: "{{ namespace }}"
    name: "{{name_app}}"
  register: pod_info
  until: pod_info.resources is defined and
         pod_info.resources | length > 0 and
         pod_info.resources[0].status.phase == "Running"
  retries: 10
  delay: 10

- debug:
    msg: "Pod status: {{ pod_info.resources[0].status.phase }}"



- name: Final check for Pod status
  fail:
    msg: "Pod {{ name_app }} did not reach 'Running' state within the timeout. Current status: {{ pod_info.resources[0].status.phase }}"
  when: pod_info.resources[0].status.phase != "Running"

- name: Confirm Pod is Running
  debug:
    msg: "Pod {{ name_app }} is successfully running."