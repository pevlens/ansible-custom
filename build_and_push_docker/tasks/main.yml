---
# tasks file for build_and_push_docker

- name: add line {{ip_nexus}}  {{ nexus_repository_url }} in /etc/hosts
  lineinfile:
    path: /etc/hosts
    line: "{{ip_nexus}} {{ nexus_repository_url }}"
    create: yes  
    state: present 

- name: Ensure /etc/docker directory exists
  ansible.builtin.file:
    path: /etc/docker
    state: directory
    owner: root
    group: root
    mode: '0755'
  when: ansible_hostname != hostname



- name: Check string insecure-registries in file /etc/docker/daemon.json
  ansible.builtin.shell: >
    grep -q '"insecure-registries": \["{{ nexus_repository_url }}", "{{ nexus_repository_url }}:443"\]' /etc/docker/daemon.json
  register: insecure_registries_check
  ignore_errors: true


- name: Configure Docker daemon.json for insecure registry
  ansible.builtin.copy:
    dest: /etc/docker/daemon.json
    content: |
      {
        "insecure-registries" : ["{{nexus_repository_url}}","{{ nexus_repository_url }}:443"]
      }
    owner: root
    group: root
    mode: '0644'
  when: insecure_registries_check.rc != 0
#  notify:
#    - restart docker 

- name: restart docker
  ansible.builtin.systemd:
    name: docker
    state: restarted
  when: ansible_hostname == hostname


- name: Dockerd start
  ansible.builtin.shell: |
    dockerd --host=unix:///var/run/docker.sock > dockerd.log 2>&1 &
  register: dockerd_start
  changed_when: False
  when: ansible_hostname != hostname

# Логин в Nexus Docker registry
- name: Login to Nexus Docker registry
  ansible.builtin.shell: |
    docker login -u {{ nexus_user }} -p {{ nexus_password }} {{ nexus_repository_url }}:443
  register: login_output
  changed_when: False

# Git pull with repo
- name: git pull app
  ansible.builtin.git:
    repo: "{{ git_repo_url }}"
    dest: "{{ git_clone_dest }}"
    version: "{{ git_version }}"
    force: yes
  register: git_clone
  
# Сборка Docker-образа
- name: Build Docker image
  ansible.builtin.shell: |
    docker build -t {{ docker_image_name }}:{{ docker_image_tag }} {{dockerfile_path}} > build.log 2>&1
  register: docker_build

# Тегирование Docker-образа для Nexus
- name: Tag Docker image for Nexus
  ansible.builtin.shell: |
    docker tag {{ docker_image_name }}:{{ docker_image_tag }} {{ nexus_repository_url }}:443/{{ nexus_repo }}/{{ docker_image_name }}:{{ docker_image_tag }}

# Пуш Docker-образа в Nexus
- name: Push Docker image to Nexus
  ansible.builtin.shell: |
    docker push {{ nexus_repository_url }}:443/{{ nexus_repo }}/{{ docker_image_name }}:{{ docker_image_tag }} 
  register: push_output

# Разлогиниваемся из Nexus Docker registry
- name: Log out from Nexus Docker registry
  ansible.builtin.shell: |
    docker logout {{ nexus_repository_url }}
  changed_when: False